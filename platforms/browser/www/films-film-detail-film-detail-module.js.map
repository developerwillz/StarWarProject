{"version":3,"sources":["webpack:///./src/app/films/film-detail/film-detail.module.ts","webpack:///./src/app/films/film-detail/film-detail.page.html","webpack:///./src/app/films/film-detail/film-detail.page.scss","webpack:///./src/app/films/film-detail/film-detail.page.ts"],"names":[],"mappings":"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","file":"films-film-detail-film-detail-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FilmDetailPage } from './film-detail.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FilmDetailPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [FilmDetailPage]\n})\nexport class FilmDetailPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color='primary'>\\n      <ion-buttons slot=\\\"start\\\">\\n          <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n    <ion-title>{{ film.title }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n<ion-card>\\n  <p>Episode ID:</p>\\n  <ion-card-content>{{film.episode_id}}</ion-card-content>\\n  <p>Opening Crawl:</p>\\n  <ion-card-content>{{film.opening_crawl}}</ion-card-content>\\n  <p>Director:</p>\\n  <ion-card-content>{{film.director}}</ion-card-content>\\n  <p>Producer:</p>\\n  <ion-card-content>{{film.producer}}</ion-card-content>\\n  <p>Release Date:</p>\\n  <ion-card-content>{{film.release_date}}</ion-card-content>\\n    <p>Characters:</p>\\n    <ul>\\n      <li *ngFor=\\\"let character of film.characters\\\">\\n        {{ character }}\\n      </li>\\n    </ul>\\n    <p>Planets:</p>\\n    <ul>\\n      <li *ngFor=\\\"let planet of film.planets\\\">\\n        {{ planet }}\\n      </li>\\n    </ul>\\n    <p>Star Ships:</p>\\n    <ul>\\n      <li *ngFor=\\\"let starship of film.starships\\\">\\n        {{ starship }}\\n      </li>\\n    </ul>\\n    <p>Vehivles:</p>\\n    <ul>\\n      <li *ngFor=\\\"let vehicle of film.vehicles\\\">\\n        {{ vehicle }}\\n      </li>\\n    </ul>\\n    <p>Species:</p>\\n    <ul>\\n      <li *ngFor=\\\"let s of film.species\\\">\\n        {{ s }}\\n      </li>\\n    </ul>\\n    <p><strong>created: </strong></p>\\n    <p>{{film.created}}</p>\\n    <p><strong>edited: </strong></p>\\n    <p>{{film.edited}}</p>\\n    <p><strong>url: </strong></p>\\n    <p>{{film.url}}</p>\\n</ion-card>\\n<div>\\n  <ion-grid>\\n    <ion-row *ngFor=\\\"let comment of comments\\\">\\n        <ion-chip ion-col>\\n          <ion-label>{{ comment }}</ion-label>\\n        </ion-chip>\\n    </ion-row>\\n  </ion-grid>\\n</div>\\n<div padding>\\n  <form name = 'CommentsForm' id=\\\"CommentsForm\\\">\\n<ion-input [(ngModel)]=\\\"commentInput\\\" name=\\\"thisInput\\\"  placeholder=\\\"Enter Your Comments\\\" type=\\\"text\\\" requeired=\\\"ture\\\"></ion-input>\\n<!-- <ion-label color=\\\"dark\\\">{{ commentInput }}</ion-label> -->\\n<ion-button expand=\\\"block\\\" (click)=\\\"refresh()\\\">Submit Comments</ion-button>\\n</form>\\n</div>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpbG1zL2ZpbG0tZGV0YWlsL2ZpbG0tZGV0YWlsLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { StarWarServiceService } from 'src/app/star-war-service.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'app-film-detail',\n  templateUrl: './film-detail.page.html',\n  styleUrls: ['./film-detail.page.scss'],\n})\nexport class FilmDetailPage implements OnInit {\n  film;\n  Rep;\n  keycharacters = 'characters';\n  keyplanets = 'planets';\n  keyName = 'name';\n  keyStarShip = 'starships';\n  keyVehicle = 'vehicles';\n  keyTitle = 'title';\n  keyvehicles = 'vehicles';\n  comments: string[] = [];\n  commentInput: string;\n  constructor(private service: StarWarServiceService,\n              private http: HttpClient,\n              public storage: Storage) { }\n\n  ngOnInit() {\n    this.film = this.service.currentfilm;\n    this.Rep = JSON.parse(JSON.stringify(this.film));\n        // DATA\n    this.storage.get(this.film[this.keyName]).then((val) => {\n          console.log('Your test is', val);\n          if (val != null) {\n          this.comments = val;\n          } else {\n            this.comments = [];\n          }\n        });\n\n    // SET FOR CHARACTERS\n    this.ReplaceUrl('characters');\n    // SET FOR PLANTETS\n    this.ReplaceUrl('planets');\n    // SET FOR STARSHIPS\n    this.ReplaceUrl('starships');\n    // SET FOR VEHICLES\n    this.ReplaceUrl('vehicles');\n    // SET FOR SPECIES\n    this.ReplaceUrl('species');\n  }\n\n  ReplaceUrl(keyword) {\n    const stuff =  this.Rep[keyword];\n    // console.log('BEFORE_REPkeyword', this.Rep[keyword]);\n    // console.log('BEFORE_PLANETkeyword', this.planet[keyword]);\n    if (typeof(stuff) === 'string') {\n    this.Rep[keyword] = [];\n    this.service.getResult(this.film[keyword]).subscribe(data => {\n      this.Rep[keyword].push(JSON.parse((data[this.keyName]))); });\n\n    // console.log('after', typeof(this.Rep[keyword]));\n    } else {\n    this.Rep[keyword] = [];\n\n    stuff.forEach(item => {\n      this.service.getResult(item).subscribe(data => {\n        if (keyword === 'films') {\n          if (data[this.keyTitle] != null) {\n          this.Rep[keyword].push(data[this.keyTitle]);\n          // console.log('REP_film-DATA', this.Rep[this.keyTitle]);\n          // console.log('After_PlanetIF', this.planet[keyword]);\n          // console.log('After_RepIF', this.Rep[keyword]);\n        }} else {\n          this.Rep[keyword].push(data[this.keyName]);\n          // console.log( 'REP_Other', this.Rep[this.keyName]);\n          // console.log('After_PlanetELSE', this.planet[keyword]);\n        }\n      });\n    });\n    }\n  }\n\n  refresh() {\n    this.comments.push(this.commentInput);\n    // console.log(this.comments);\n    this.storage.set(this.film[this.keyName], this.comments);\n  }\n\n}\n"],"sourceRoot":""}