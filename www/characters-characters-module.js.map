{"version":3,"sources":["webpack:///./src/app/characters/characters.module.ts","webpack:///./src/app/characters/characters.page.html","webpack:///./src/app/characters/characters.page.scss","webpack:///./src/app/characters/characters.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AACV;AAEM;AAEnD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+DAAc;KAC1B;CACF,CAAC;AAWF;IAAA;IAAmC,CAAC;IAAvB,oBAAoB;QAThC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,+DAAc,CAAC;SAC/B,CAAC;OACW,oBAAoB,CAAG;IAAD,2BAAC;CAAA;AAAH;;;;;;;;;;;;ACxBjC,2XAA2X,QAAQ,mD;;;;;;;;;;;ACAnY,+DAA+D,mJ;;;;;;;;;;;;;;;;;;;;ACAb;AACkB;AAClB;AACT;AAMzC;IAME,wBAAoB,UAAsB,EAAU,OAA8B,EAAU,MAAc;QAAtF,eAAU,GAAV,UAAU,CAAY;QAAU,YAAO,GAAP,OAAO,CAAuB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAH1G,QAAG,GAAG,6BAA6B,CAAC;QACpC,cAAS,GAAG,SAAS,CAAC;QACtB,YAAO,GAAG,MAAM,CAAC;IAC6F,CAAC;IAC/G,iCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IACxC,CAAC;IACH,kCAAS,GAAT,UAAU,GAAW,EAAE,UAAiB;QAAxC,iBAcC;QAbC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAAE,cAAI;YACtC,IAAI,UAAU,KAAK,SAAS,EAAE;gBAC5B,UAAU,GAAG,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;aACnC;iBAAM;gBACL,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aACtD;YACD,IAAI,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE;gBAC9B,KAAI,CAAC,SAAS,CAAE,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,EAAE,UAAU,CAAC,CAAC;aACjD;iBAAM;gBACL,2BAA2B;aAC5B;YACD,KAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAY,GAAZ,UAAa,CAAC;QACZ,IAAI,CAAC,OAAO,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAClC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;IAC9C,CAAC;IA7BU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,wGAAqC;;SAEtC,CAAC;+EAOgC,+DAAU,EAAmB,+EAAqB,EAAkB,sDAAM;OAN/F,cAAc,CA8B1B;IAAD,qBAAC;CAAA;AA9B0B","file":"characters-characters-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\n\nimport { CharactersPage } from './characters.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CharactersPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [CharactersPage]\n})\nexport class CharactersPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color='primary'>\\n      <ion-buttons slot=\\\"start\\\">\\n          <ion-back-button defaultHref=\\\"home\\\"></ion-back-button>\\n        </ion-buttons>\\n    <ion-title>Characters</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-item *ngFor=\\\"let c of feedback\\\" (click) = \\\"onGoToDetail(c)\\\">\\n      {{c.name}}\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXJhY3RlcnMvY2hhcmFjdGVycy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { StarWarServiceService } from '../star-war-service.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-characters',\n  templateUrl: './characters.page.html',\n  styleUrls: ['./characters.page.scss'],\n})\nexport class CharactersPage implements OnInit {\n\n  feedback: any[];\n  url = 'https://swapi.co/api/people';\n  keyResult = 'results';\n  keyNext = 'next';\n  constructor(private httpClient: HttpClient, private service: StarWarServiceService, private router: Router) { }\n  ngOnInit() {\n    this.getResult(this.url, this.feedback);\n    }\n  getResult(url: string, characters: any[]) {\n    this.httpClient.get(url).subscribe( data => {\n      if (characters === undefined) {\n        characters = data[this.keyResult];\n      } else {\n        characters = characters.concat(data[this.keyResult]);\n      }\n      if (data[this.keyNext] != null) {\n        this.getResult (data[this.keyNext], characters);\n      } else {\n        // console.log('finished');\n      }\n      this.feedback = characters;\n    });\n  }\n\n  onGoToDetail(c) {\n    this.service.currentCharacter = c;\n    this.router.navigate(['/character-detail']);\n  }\n}\n"],"sourceRoot":""}