{"version":3,"sources":["webpack:///./src/app/starships/starship-details/starship-details.module.ts","webpack:///./src/app/starships/starship-details/starship-details.page.html","webpack:///./src/app/starships/starship-details/starship-details.page.scss","webpack:///./src/app/starships/starship-details/starship-details.page.ts"],"names":[],"mappings":"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","file":"starships-starship-details-starship-details-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { StarshipDetailsPage } from './starship-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StarshipDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [StarshipDetailsPage]\n})\nexport class StarshipDetailsPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color='primary'>\\n      <ion-buttons slot=\\\"start\\\">\\n          <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n    <ion-title>{{ Rep.name }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card>\\n      <p>Model:</p>\\n      <ion-card-content>{{Rep.model}}</ion-card-content>\\n      <p>Manufacturer:</p>\\n      <ion-card-content>{{Rep.manufacturer}}</ion-card-content>\\n      <p>Cost in_Credits:</p>\\n      <ion-card-content>{{Rep.cost_in_credits}}</ion-card-content>\\n      <p>Length:</p>\\n      <ion-card-content>{{Rep.length}}</ion-card-content>\\n      <p>Max Atmosphering Speed:</p>\\n      <ion-card-content>{{Rep.max_atmosphering_speed}}</ion-card-content>\\n      <p>Crew:</p>\\n      <ion-card-content>{{Rep.crew}}</ion-card-content>\\n      <p>Passengers:</p>\\n      <ion-card-content>{{Rep.passengers}}</ion-card-content>\\n      <p>Cargo Capacity:</p>\\n      <ion-card-content>{{Rep.cargo_capacity}}</ion-card-content>\\n      <p>Consumables:</p>\\n      <ion-card-content>{{Rep.consumables}}</ion-card-content>\\n      <p>Hyperdrive Rating:</p>\\n      <ion-card-content>{{Rep.hyperdrive_rating}}</ion-card-content>\\n      <p>MGLT:</p>\\n      <ion-card-content>{{Rep.MGLT}}</ion-card-content>\\n      <p>Starship Class:</p>\\n      <ion-card-content>{{Rep.starship_class}}</ion-card-content>\\n      <p>Pilots:</p>\\n      <ul>\\n        <li *ngFor=\\\"let p of Rep.pilots\\\">\\n          {{ p }}\\n        </li>\\n      </ul>\\n      <p>Films:</p>\\n      <ul>\\n        <li *ngFor=\\\"let f of Rep.films\\\">\\n          {{ f }}\\n        </li>\\n      </ul>\\n      <p>Created:</p>\\n      <ion-card-content>{{Rep.created}}</ion-card-content>\\n      <p>Edited:</p>\\n      <ion-card-content>{{Rep.edited}}</ion-card-content>\\n      <p>url:</p>\\n      <ion-card-content>{{Rep.url}}</ion-card-content>\\n    </ion-card>\\n    \\n<div>\\n  <ion-grid>\\n    <ion-row *ngFor=\\\"let comment of comments\\\">\\n        <ion-chip ion-col>\\n          <ion-label>{{ comment }}</ion-label>\\n        </ion-chip>\\n    </ion-row>\\n  </ion-grid>\\n</div>\\n<div padding>\\n  <form name = 'CommentsForm' id=\\\"CommentsForm\\\">\\n<ion-input [(ngModel)]=\\\"commentInput\\\" name=\\\"thisInput\\\"  placeholder=\\\"Enter Your Comments\\\" type=\\\"text\\\" requeired=\\\"ture\\\"></ion-input>\\n<!-- <ion-label color=\\\"dark\\\">{{ commentInput }}</ion-label> -->\\n<ion-button expand=\\\"block\\\" (click)=\\\"refresh()\\\">Submit Comments</ion-button>\\n</form>\\n</div>\\n\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0YXJzaGlwcy9zdGFyc2hpcC1kZXRhaWxzL3N0YXJzaGlwLWRldGFpbHMucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { StarWarServiceService } from 'src/app/star-war-service.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Storage } from '@ionic/storage';\n@Component({\n  selector: 'app-starship-details',\n  templateUrl: './starship-details.page.html',\n  styleUrls: ['./starship-details.page.scss'],\n})\nexport class StarshipDetailsPage implements OnInit {\n  starship;\n  Rep;\n  keycharacters = 'characters';\n  keyplanets = 'planets';\n  keyName = 'name';\n  keyStarShip = 'starships';\n  keyVehicle = 'vehicles';\n  keyTitle = 'title';\n  keyvehicles = 'vehicles';\n  comments: string[] = [];\n  commentInput: string;\n\n  constructor(private service: StarWarServiceService, private http: HttpClient, public storage: Storage) { }\n\n  ngOnInit() {\n    this.starship = this.service.currentStarShip;\n    this.Rep = JSON.parse(JSON.stringify(this.starship));\n    // DATA\n    this.storage.get(this.starship[this.keyName]).then((val) => {\n      // console.log('Your test is', val);\n      if (val != null) {\n      this.comments = val;\n      } else {\n        this.comments = [];\n      }\n    });\n\n        // SET FOR FILM\n    this.ReplaceUrl('films');\n        // SET FOR PIROT\n    this.ReplaceUrl('pilots');\n  }\n  ReplaceUrl(keyword) {\n    const stuff =  this.Rep[keyword];\n    // console.log(keyword, this.Rep[keyword]);\n    if (typeof(stuff) === 'string') {\n    this.Rep[keyword] = [];\n    this.service.getResult(this.Rep[keyword]).subscribe(data => {\n      this.Rep[keyword].push(JSON.parse((data[this.keyName]))); });\n    // console.log('after', typeof(this.Rep[keyword]));\n    } else {\n    this.Rep[keyword] = [];\n    stuff.forEach(item => {\n      this.service.getResult(item).subscribe(data => {\n        if (keyword === 'films') {\n          if (data[this.keyTitle] != null) {\n          this.Rep[keyword].push(data[this.keyTitle]);\n          // console.log('film-DATA', data[this.keyTitle]);\n        }} else {\n          this.Rep[keyword].push(data[this.keyName]);\n          // console.log( keyword + 'data', data[this.keyName]);\n          // console.log('After', this.specie[keyword]);\n        }\n      });\n    });\n    }\n  }\n  refresh() {\n    this.comments.push(this.commentInput);\n    console.log(this.comments);\n    this.storage.set(this.starship[this.keyName], this.comments);\n  }\n\n\n}\n"],"sourceRoot":""}