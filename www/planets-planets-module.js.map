{"version":3,"sources":["webpack:///./src/app/planets/planets.module.ts","webpack:///./src/app/planets/planets.page.html","webpack:///./src/app/planets/planets.page.scss","webpack:///./src/app/planets/planets.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEA;AAE7C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yDAAW;KACvB;CACF,CAAC;AAWF;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAT7B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,yDAAW,CAAC;SAC5B,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB9B,oYAAoY,QAAQ,2D;;;;;;;;;;;ACA5Y,+DAA+D,2I;;;;;;;;;;;;;;;;;;;;ACAb;AACA;AACkB;AAC3B;AAOzC;IAKE,qBAAoB,UAAsB,EAAU,OAA8B,EAAU,MAAc;QAAtF,eAAU,GAAV,UAAU,CAAY;QAAU,YAAO,GAAP,OAAO,CAAuB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAH1G,QAAG,GAAG,+BAA+B,CAAC;QACtC,cAAS,GAAG,SAAS,CAAC;QACtB,YAAO,GAAG,MAAM,CAAC;IAC6F,CAAC;IAE/G,8BAAQ,GAAR;QACE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC1C,CAAC;IACD,+BAAS,GAAT,UAAU,GAAW,EAAE,OAAc;QAArC,iBAcC;QAbC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAAE,cAAI;YACtC,IAAI,OAAO,KAAK,SAAS,EAAE;gBACzB,OAAO,GAAG,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;aAChC;iBAAM;gBACL,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aAChD;YACD,IAAI,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE;gBAC9B,KAAI,CAAC,SAAS,CAAE,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,CAAC;aAC9C;iBAAM;gBACL,yCAAyC;aAC1C;YACD,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAY,GAAZ,UAAa,CAAC;QACZ,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;IAC5C,CAAC;IA7BU,WAAW;QALvB,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,+FAAkC;;SAEnC,CAAC;+EAMgC,+DAAU,EAAmB,+EAAqB,EAAkB,sDAAM;OAL/F,WAAW,CA+BvB;IAAD,kBAAC;CAAA;AA/BuB","file":"planets-planets-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PlanetsPage } from './planets.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PlanetsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [PlanetsPage]\n})\nexport class PlanetsPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n          <ion-back-button defaultHref=\\\"home\\\"></ion-back-button>\\n        </ion-buttons>\\n    <ion-title>Planets</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-list>\\n        <ion-item *ngFor=\\\"let c of feedback\\\" (click) = \\\"onGoToDetail(c)\\\">\\n          {{c.name}}\\n        </ion-item>\\n      </ion-list>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BsYW5ldHMvcGxhbmV0cy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { StarWarServiceService } from '../star-war-service.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-planets',\n  templateUrl: './planets.page.html',\n  styleUrls: ['./planets.page.scss'],\n})\nexport class PlanetsPage implements OnInit {\n  feedback: any[];\n  url = 'https://swapi.co/api/planets/';\n  keyResult = 'results';\n  keyNext = 'next';\n  constructor(private httpClient: HttpClient, private service: StarWarServiceService, private router: Router) { }\n\n  ngOnInit() {\n    this.getResult(this.url, this.feedback);\n  }\n  getResult(url: string, species: any[]) {\n    this.httpClient.get(url).subscribe( data => {\n      if( species === undefined) {\n        species = data[this.keyResult];\n      } else {\n        species = species.concat(data[this.keyResult]);\n      }\n      if (data[this.keyNext] != null) {\n        this.getResult (data[this.keyNext], species);\n      } else {\n        //console.log('finished', this.feedback);\n      }\n      this.feedback = species;\n    });\n  }\n\n  onGoToDetail(c) {\n    this.service.currentPlanet = c;\n    this.router.navigate(['/planet-details']);\n  }\n\n}\n"],"sourceRoot":""}